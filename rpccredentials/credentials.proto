syntax = "proto3";

package pepeunlimited.users;
option go_package = "rpccredentials";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

// https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/wrappers.proto

service CredentialsService {

    // Update password:Restricted
    rpc UpdatePassword(UpdatePasswordParams)        returns (google.protobuf.Empty);

    // Generates ticket to password_reset_ticket which sends token via email which can given to user ex. https://www.example.com/reset?token=Talo3mRjaGVzdITUAGOXYZwCMq7EtHfYH4ILcBgKaoWXDHTJOIlBUfcr
    rpc ForgotPassword(ForgotPasswordParams)        returns (google.protobuf.Empty);

    // Verify the password reset token before display anything..
    rpc VerifyResetPassword(VerifyPasswordParams)   returns (google.protobuf.Empty);

    // Reset the password with the token which is generated from ForgotPassword API and password
    rpc ResetPassword(ResetPasswordParams)          returns (google.protobuf.Empty);

    // verify the sign-in with real credentials
    rpc VerifySignIn(VerifySignInParams)         returns (VerifySignInResponse);
}

message VerifySignInParams {
    string username = 1;    //  required
    string password = 2;    //  required
}

message UpdatePasswordParams {
    string current_password = 1;  // required
    string new_password = 2;      // required
}

message ForgotPasswordParams {
    google.protobuf.StringValue username   = 1;
    google.protobuf.StringValue email      = 2;
    string language = 3;
}

message ResetPasswordParams {
    string ticket_token = 1;//required
    string password = 2;//required
}

message VerifyPasswordParams {
    string ticket_token = 1;//required
}

message VerifySignInResponse {
    int64 id                 = 1;
    string username          = 2;
    string email             = 3;
    repeated string roles    = 4;
}